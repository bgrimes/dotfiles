#!/usr/bin/env bash

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

source ~/.bash/bash_colors

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 190)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 256)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

CHECKMARK='\x27\x13'
XMARK='\x26\x13'

function iconify {
	iconv -f utf-16be
}

function get_icon {
	local MY_ICON=$(echo -ne "$1" | iconify)
	echo -ne "$2$MY_ICON$RESET"
}

function git_changes_icon {
	get_icon $XMARK $MAGENTA
}

function git_no_changes_icon {
	get_icon $CHECKMARK $GREEN
}

# Source the original, then source the overwrites. This allows us to add new overwrites to the orig later!
source ~/.bash/prompt_color_settings.orig
[ -e ~/.bash/prompt_color_settings ] && source ~/.bash/prompt_color_settings

function parse_git_dirty() {
	[[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && git_changes_icon || git_no_changes_icon

	#[[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && git_changes_icon || git_no_changes_icon

	stashCount=$(git stash list 2> /dev/null | wc -l)
	[[ $stashCount -ne 0 ]] && echo -n "$PURPLE Stashed: $stashCount"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/( \1 $(parse_git_dirty) $PURPLE)/"
}

export PS1="\n\[${BOLD}${USERCOLOR}\]\u \[$BASECOLOR\]at \[$HOSTCOLOR\]\h \[$BASECOLOR\]in \[$DIRCOLOR\]\w\[$BASECOLOR\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$BASECOLOR\]\n\[$RESET\]\$ \[$RESET\]"
export PS2="\[$PS2COLOR\]→ \[$RESET\]"
